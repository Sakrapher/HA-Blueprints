blueprint:
  name: CO2 Alert
  author: Sakrapher
  description: Sends a notification when the CO₂ level is too high and informs when it returns to normal.
  source_url: 'https://github.com/Sakrapher/HA-Blueprints/main/carbon-dioxide-notification.yaml'
  domain: automation
  input:
    co2_sensor:
      name: CO₂ Sensor
      description: Select a CO₂ sensor.
      selector:
        entity:
          domain: sensor
          device_class: carbon_dioxide
    notify_targets:
      name: Notification Targets
      description: Select one or more mobile app devices to receive notifications.
      selector:
        device:
          integration: mobile_app
          multiple: true

    # High CO₂ settings
    high_threshold:
      name: Upper Threshold
      description: CO₂ level considered "too high". Should be within the typical sensor range (1400-2000 ppm).
      default: 1400
      selector:
        number:
          min: 400
          max: 2000
          step: 10
          mode: slider
    high_message:
      name: High CO₂ Notification Message
      description: Message to send when the CO₂ level is too high.
      default: "CO2 level is too high! Please ventilate!"
      selector:
        text:
    high_actions:
      name: (Optional) Actions on High
      description: Add actions to execute when the CO₂ level is high.
      default: []
      selector:
        action: {}

    # Normal CO₂ settings
    low_threshold:
      name: Lower Threshold
      description: CO₂ level at which the situation is considered normal again. Must be lower than the upper threshold.
      default: 800
      selector:
        number:
          min: 400
          max: 2000
          step: 10
          mode: slider
    low_message:
      name: Normal CO₂ Notification Message
      description: Message to send when the CO₂ level returns to normal.
      default: "CO2 level is back to normal!"
      selector:
        text:
    low_condition:
      name: (Optional) Additional Condition for Low
      description: Optional condition that must be met for the low action to execute. Must be a valid condition if specified.
      default: []
      selector:
        condition: {}
    low_actions:
      name: (Optional) Actions on Low
      description: Add actions to execute when the CO₂ level is low.
      default: []
      selector:
        action: {}

variables:
  co2_sensor: !input co2_sensor
  notify_targets: !input notify_targets
  high_threshold: !input high_threshold
  low_threshold: !input low_threshold
  high_message: !input high_message
  low_message: !input low_message
  low_condition: !input low_condition

trigger:
  - platform: numeric_state
    entity_id: !input co2_sensor
    above: !input high_threshold
    id: "high"
  - platform: numeric_state
    entity_id: !input co2_sensor
    below: !input low_threshold
    id: "low"

action:
  - choose:
      - conditions:
          - condition: trigger
            id: "high"
        sequence:
          - alias: Send a notification to each device
            repeat:
              for_each: !input notify_targets
              sequence:
              - action: notify.mobile_app_{{ device_attr(repeat.item, 'name') | slugify }}
                data:
                  title: "⚠️ CO₂ Alert"
                  message: "{{ high_message }}"
          - choose:
              - conditions: []
                sequence: !input high_actions
      - conditions:
          - condition: trigger
            id: "low"
          - condition: !input low_condition
        sequence:
          - alias: Send a notification to each device
            repeat:
              for_each: !input notify_targets
              sequence:
              - action: notify.mobile_app_{{ device_attr(repeat.item, 'name') | slugify }}
                data:
                  title: "✅ CO₂ Notification"
                  message: "{{ low_message }}"
          - choose:
              - conditions: []
                sequence: !input low_actions
